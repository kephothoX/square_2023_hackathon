import { Component, OnInit } from '@angular/core';

import { Router } from '@angular/router';

import { SelfcareService } from '../../services/selfcare.service';
import { SquareService } from '../../services/square.service';
import { AppService } from 'src/app/services/app.service';

import ls from 'localstorage-slim';

@Component({
  selector: 'app-life-cover',
  templateUrl: './life-cover.component.html',
  styleUrls: ['./life-cover.component.scss']
})
export class LifeCoverComponent implements OnInit {
  weeklyAmount?: number;
  monthlyAmount?: number;
  annualAmount?: number;

  isLoggedIn: Boolean  = ls.get('auth_signin_status', { decrypt: true })? true : false;

  constructor(
    private _selfcareService: SelfcareService,
    private _squareService: SquareService,
    private _appService: AppService,
    private _router: Router,
  ) {
    ls.set('active_route', `${ this._router.routerState.snapshot.url }`, { encrypt: true} );
  }


  ngOnInit() {


   this.getWeeklyLCSubscriptionAmount();
   this.getMonthlylyLCSubscriptionAmount();
   this.getAnnualLCSubscriptionAmount();

  }

  getWeeklyLCSubscriptionAmount() {
    this._squareService.getCatalogWithID({id: 'AEBMKJ7JB2M5WEUDSLD5ZUAO'}).subscribe((result: any) => {
      this.weeklyAmount = result.object.subscription_plan_data.phases[0].recurring_price_money.amount;

    });
  }

  getMonthlylyLCSubscriptionAmount() {
    this._squareService.getCatalogWithID({id: 'AE5AMW7LA7OVJBS2K2KNDOVC'}).subscribe((result: any) => {
      this.monthlyAmount = result.object.subscription_plan_data.phases[0].recurring_price_money.amount;

    });
  }

  getAnnualLCSubscriptionAmount() {
    this._squareService.getCatalogWithID({id: '244VF2OQ5L55AXZMIJH2NGGP'}).subscribe((result: any) => {
      this.annualAmount = result.object.subscription_plan_data.phases[0].recurring_price_money.amount;

    });
  }


  subscribeWeekly() {
    if(this.isLoggedIn == false ) {
      this._router.navigate(['/selfcare/auth/signin']);

    } else {
     this._appService.listMerchants().subscribe((result: any) => {
        const dataSet = {
          "idempotency_key": self.crypto.randomUUID(),
          "location_id": result.merchant[0].main_location_id,
          "plan_id": "AEBMKJ7JB2M5WEUDSLD5ZUAO",
          "customer_id": ls.get('customer_id', { decrypt: true})

        }
        this._squareService.newSubscriptionPlan(dataSet).subscribe((res: any) => {
          console.log(res);
        });
      });

    }


  }

  subscribeMonthly() {
    if(this.isLoggedIn == false ) {
      this._router.navigate(['/selfcare/auth/signin']);

    } else {
      this._appService.listMerchants().subscribe((result: any) => {
        const dataSet = {
          "idempotency_key": self.crypto.randomUUID(),
          "location_id": result.merchant[0].main_location_id,
          "plan_id": "AE5AMW7LA7OVJBS2K2KNDOVC",
          "customer_id": ls.get('customer_id', { decrypt: true})

        }
        this._squareService.newSubscriptionPlan(dataSet).subscribe((res: any) => {
          console.log(res);
        });
      });
    }
  }


  subscribeAnnually() {
    if(this.isLoggedIn == false ) {
      this._router.navigate(['/selfcare/auth/signin']);

    } else {
      this._appService.listMerchants().subscribe((result: any) => {
        const dataSet = {
          "idempotency_key": self.crypto.randomUUID(),
          "location_id": result.merchant[0].main_location_id,
          "plan_id": "244VF2OQ5L55AXZMIJH2NGGP",
          "customer_id": ls.get('customer_id', { decrypt: true})

        }
        this._squareService.newSubscriptionPlan(dataSet).subscribe((res: any) => {
          console.log(res);
        });
      });
    }
  }

  signupAndSubscribeWeekly() {
    if(this.isLoggedIn == false ) {
      this._router.navigate(['/selfcare/auth/signin']);

    } else {
      this._appService.listMerchants().subscribe((result: any) => {
        const dataSet = {
          "idempotency_key": self.crypto.randomUUID(),
          "quick_pay": {
            "name": "Healus Assuarance Life Cover Weekly Subscription Plan",
            "price_money": {
              "amount": 400,
              "currency": "USD"
            },
            "location_id": result.merchant[0].main_location_id
          },
          "checkout_options": {
            "subscription_plan_id": "AEBMKJ7JB2M5WEUDSLD5ZUAO"
          }
        }
        this._squareService.newSubscriptionPlanOnlineCheckout(dataSet).subscribe((res: any) => {
          window.open(`${ res.payment_link.url}`);
        });
      });
    }
  }


}
